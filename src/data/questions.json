{
    "examTitle": "React Programming Test",
    "timeLimit": 3600,
    "questions": [
        {
            "id": 1,
            "question": "What is React's virtual DOM?",
            "options": [
                "A complete copy of the actual DOM",
                "A lightweight copy of the actual DOM",
                "A virtual reality interface",
                "A programming language"
            ],
            "correctAnswer": 1
        },
        {
            "id": 2,
            "question": "Which lifecycle method is called after a component is rendered in React?",
            "options": [
                "componentDidMount",
                "componentWillUnmount",
                "render",
                "componentWillMount"
            ],
            "correctAnswer": 0
        },
        {
            "id": 3,
            "question": "What is the purpose of the useState hook in React?",
            "options": [
                "To manage state in functional components",
                "To fetch data from APIs",
                "To manage routing",
                "To create global state"
            ],
            "correctAnswer": 0
        },
        {
            "id": 4,
            "question": "Which command is used to create a new React project?",
            "options": [
                "npx create-react-app",
                "npm create-react-app",
                "npm install react",
                "npx install react"
            ],
            "correctAnswer": 0
        },
        {
            "id": 5,
            "question": "What is JSX in React?",
            "options": [
                "A syntax extension for JavaScript",
                "A React method for rendering",
                "A CSS library",
                "A JavaScript library"
            ],
            "correctAnswer": 0
        },
        {
            "id": 6,
            "question": "In React, what does 'props' stand for?",
            "options": ["Properties", "Prototypes", "Promises", "Procedures"],
            "correctAnswer": 0
        },
        {
            "id": 7,
            "question": "Which hook is used to perform side effects in functional components?",
            "options": ["useState", "useReducer", "useEffect", "useMemo"],
            "correctAnswer": 2
        },
        {
            "id": 8,
            "question": "What is the default port for running a React app?",
            "options": ["3000", "8080", "5000", "8000"],
            "correctAnswer": 0
        },
        {
            "id": 9,
            "question": "How can you pass data from a parent to a child component in React?",
            "options": ["Using state", "Using props", "Using Redux", "Using context"],
            "correctAnswer": 1
        },
        {
            "id": 10,
            "question": "What does the useContext hook do?",
            "options": [
                "Allows functional components to access context",
                "Handles side effects",
                "Manages global state",
                "Performs DOM manipulations"
            ],
            "correctAnswer": 0
        },
        {
            "id": 11,
            "question": "Which hook would you use to memoize a value in React?",
            "options": ["useEffect", "useMemo", "useCallback", "useReducer"],
            "correctAnswer": 1
        },
        {
            "id": 12,
            "question": "What is the purpose of the useReducer hook?",
            "options": [
                "To create context",
                "To manage complex state logic",
                "To render components",
                "To manage side effects"
            ],
            "correctAnswer": 1
        },
        {
            "id": 13,
            "question": "How can you style components in React?",
            "options": [
                "Using CSS classes",
                "Using inline styles",
                "Using styled-components",
                "All of the above"
            ],
            "correctAnswer": 3
        },
        {
            "id": 14,
            "question": "What does the useRef hook do in React?",
            "options": [
                "Accesses the DOM elements directly",
                "Manages state in class components",
                "Performs asynchronous tasks",
                "Fetches data from APIs"
            ],
            "correctAnswer": 0
        },
        {
            "id": 15,
            "question": "What are 'pure components' in React?",
            "options": [
                "Components with no side effects",
                "Components that do not have children",
                "Components that implement shouldComponentUpdate",
                "Components that handle user input only"
            ],
            "correctAnswer": 2
        },
        {
            "id": 16,
            "question": "Which method is used to update state in a class component?",
            "options": ["setState", "useState", "updateState", "changeState"],
            "correctAnswer": 0
        },
        {
            "id": 17,
            "question": "What does the componentDidUpdate lifecycle method do?",
            "options": [
                "It is called when the component is first rendered",
                "It is called when the component is removed from the DOM",
                "It is called after the component updates",
                "It is called to initialize state"
            ],
            "correctAnswer": 2
        },
        {
            "id": 18,
            "question": "What is Redux used for in React applications?",
            "options": ["Routing", "State management", "Handling side effects", "API calls"],
            "correctAnswer": 1
        },
        {
            "id": 19,
            "question": "Which React hook can you use to cache expensive calculations?",
            "options": ["useEffect", "useMemo", "useReducer", "useRef"],
            "correctAnswer": 1
        },
        {
            "id": 20,
            "question": "How can you prevent re-renders in a React component?",
            "options": [
                "Using memoization",
                "Using shouldComponentUpdate",
                "Using React.memo",
                "All of the above"
            ],
            "correctAnswer": 3
        },
        {
            "id": 21,
            "question": "What does React.memo do?",
            "options": [
                "Memoizes component results to prevent re-renders",
                "Creates a new component",
                "Updates the DOM directly",
                "Connects React to a Redux store"
            ],
            "correctAnswer": 0
        },
        {
            "id": 22,
            "question": "Which company developed React?",
            "options": ["Google", "Facebook", "Microsoft", "Apple"],
            "correctAnswer": 1
        },
        {
            "id": 23,
            "question": "Which of the following is NOT a built-in React hook?",
            "options": ["useEffect", "useState", "useFetch", "useReducer"],
            "correctAnswer": 2
        },
        {
            "id": 24,
            "question": "What does the key attribute help with in React lists?",
            "options": [
                "Identifying list elements uniquely",
                "Applying styles",
                "Setting focus",
                "Passing data to children"
            ],
            "correctAnswer": 0
        },
        {
            "id": 25,
            "question": "Which hook would you use to create a value that persists across renders without causing a re-render?",
            "options": ["useState", "useEffect", "useRef", "useMemo"],
            "correctAnswer": 2
        },
        {
            "id": 26,
            "question": "What is the purpose of React Router?",
            "options": [
                "To manage component state",
                "To handle routing in single-page applications",
                "To perform animations",
                "To handle global state"
            ],
            "correctAnswer": 1
        },
        {
            "id": 27,
            "question": "Which of the following is NOT an advantage of React?",
            "options": [
                "Unidirectional data flow",
                "Ease of SEO optimization",
                "Component-based architecture",
                "Virtual DOM for performance"
            ],
            "correctAnswer": 1
        },
        {
            "id": 28,
            "question": "In React, what does the useCallback hook do?",
            "options": [
                "Creates a new function every render",
                "Memoizes a function to avoid recreation on every render",
                "Manages component lifecycle",
                "Manages routing"
            ],
            "correctAnswer": 1
        },
        {
            "id": 29,
            "question": "What is the purpose of PropTypes in React?",
            "options": [
                "For state management",
                "For type-checking props in components",
                "For handling API calls",
                "For adding animations"
            ],
            "correctAnswer": 1
        },
        {
            "id": 30,
            "question": "What is a React Fragment?",
            "options": [
                "A way to group multiple elements without adding extra nodes to the DOM",
                "A component lifecycle method",
                "A method to manage state",
                "A way to fetch data from an API"
            ],
            "correctAnswer": 0
        },
        {
            "id": 31,
            "question": "What does the 'key' prop help React identify in a list?",
            "options": [
                "The unique identifier for each list item",
                "The name of the list item",
                "The order of the list items",
                "The component type of each list item"
            ],
            "correctAnswer": 0
        },
        {
            "id": 32,
            "question": "In React, what does componentDidCatch allow you to handle?",
            "options": [
                "JavaScript errors in components",
                "State management",
                "API calls",
                "Asynchronous operations"
            ],
            "correctAnswer": 0
        },
        {
            "id": 33,
            "question": "What does 'lifting state up' in React mean?",
            "options": [
                "Moving state to a common ancestor to share between components",
                "Moving state to child components",
                "Removing state from components",
                "Passing state to Redux"
            ],
            "correctAnswer": 0
        },
        {
            "id": 34,
            "question": "What is the main purpose of React's Context API?",
            "options": [
                "To manage global state",
                "To add CSS styling",
                "To fetch data",
                "To create animations"
            ],
            "correctAnswer": 0
        },
        {
            "id": 35,
            "question": "Which statement about React Hooks is correct?",
            "options": [
                "Hooks can be used in class components",
                "Hooks can only be used in functional components",
                "Hooks replace Redux",
                "Hooks are mandatory in all React components"
            ],
            "correctAnswer": 1
        },
        {
            "id": 36,
            "question": "Which hook would you use to optimize performance by caching values?",
            "options": ["useReducer", "useCallback", "useMemo", "useEffect"],
            "correctAnswer": 2
        },
        {
            "id": 37,
            "question": "In React, what does 'state' typically refer to?",
            "options": [
                "The DOM elements of a component",
                "A way to pass data to child components",
                "Data that changes over time within a component",
                "The parent component of a component"
            ],
            "correctAnswer": 2
        },
        {
            "id": 38,
            "question": "What is the purpose of the setState function in a class component?",
            "options": [
                "To modify props",
                "To update the component's state",
                "To update the component's props",
                "To call lifecycle methods"
            ],
            "correctAnswer": 1
        },
        {
            "id": 39,
            "question": "What does the 'useEffect' hook enable you to do?",
            "options": [
                "Fetch data, subscribe to events, or perform side effects",
                "Render a component",
                "Control state directly",
                "Create a React context"
            ],
            "correctAnswer": 0
        },
        {
            "id": 40,
            "question": "What is the benefit of server-side rendering in React?",
            "options": [
                "Increases load time",
                "Improves SEO and initial load performance",
                "Reduces JavaScript file size",
                "Increases component rendering speed"
            ],
            "correctAnswer": 1
        },
        {
            "id": 41,
            "question": "What is a 'controlled component' in React?",
            "options": [
                "A component that controls its state and renders itself",
                "A component where form data is handled by the component's state",
                "A component that fetches data from an API",
                "A component that has a fixed render output"
            ],
            "correctAnswer": 1
        },
        {
            "id": 42,
            "question": "What React method would you use to prevent component updates?",
            "options": [
                "shouldComponentUpdate",
                "componentDidUpdate",
                "componentWillUpdate",
                "render"
            ],
            "correctAnswer": 0
        },
        {
            "id": 43,
            "question": "What is the difference between props and state in React?",
            "options": [
                "Props are read-only, while state is writable",
                "Props are writable, while state is read-only",
                "Both are read-only",
                "Both are writable"
            ],
            "correctAnswer": 0
        },
        {
            "id": 44,
            "question": "What is React's 'StrictMode' used for?",
            "options": [
                "To enable stricter code checks and highlight potential problems",
                "To optimize component rendering",
                "To enhance browser compatibility",
                "To allow debugging only in development"
            ],
            "correctAnswer": 0
        },
        {
            "id": 45,
            "question": "How can you make API requests in React?",
            "options": [
                "Using fetch or Axios",
                "Using componentWillUpdate",
                "Using setState",
                "Using local storage"
            ],
            "correctAnswer": 0
        },
        {
            "id": 46,
            "question": "What does React.memo() do?",
            "options": [
                "Memoizes a component to avoid unnecessary re-renders",
                "Updates the state",
                "Fetches data",
                "Initializes a React context"
            ],
            "correctAnswer": 0
        },
        {
            "id": 47,
            "question": "What is the purpose of the ReactDOM.render() method?",
            "options": [
                "To render a React component into the DOM",
                "To fetch data from the server",
                "To create a new component",
                "To manage state in a component"
            ],
            "correctAnswer": 0
        },
        {
            "id": 48,
            "question": "What is Babel used for in a React project?",
            "options": [
                "Transpiling modern JavaScript for older browsers",
                "Running the project on a server",
                "Styling components",
                "Testing components"
            ],
            "correctAnswer": 0
        },
        {
            "id": 49,
            "question": "Which lifecycle method is called before a component is removed from the DOM?",
            "options": [
                "componentDidMount",
                "componentDidUpdate",
                "componentWillUnmount",
                "componentWillUpdate"
            ],
            "correctAnswer": 2
        },
        {
            "id": 50,
            "question": "What is the main difference between a controlled and uncontrolled component?",
            "options": [
                "Controlled components are managed by state, while uncontrolled components are managed by the DOM",
                "Controlled components are managed by the DOM, while uncontrolled components are managed by state",
                "Controlled components cannot use hooks",
                "Uncontrolled components require Redux"
            ],
            "correctAnswer": 0
        },
        {
            "id": 51,
            "question": "How do you conditionally render elements in React?",
            "options": [
                "Using JavaScript conditional operators",
                "Using CSS",
                "Using HTML only",
                "Using Webpack"
            ],
            "correctAnswer": 0
        },
        {
            "id": 52,
            "question": "What does the 'useEffect' hook return?",
            "options": [
                "Nothing or a cleanup function",
                "The state of the component",
                "The updated DOM",
                "The props passed to the component"
            ],
            "correctAnswer": 0
        },
        {
            "id": 53,
            "question": "What is the purpose of the React.Fragment component?",
            "options": [
                "To render multiple elements without adding extra nodes to the DOM",
                "To handle routing in a React app",
                "To perform asynchronous actions",
                "To manage state globally"
            ],
            "correctAnswer": 0
        },
        {
            "id": 54,
            "question": "How do you handle form submissions in React?",
            "options": [
                "By adding an onSubmit event handler",
                "By directly using input values",
                "By writing to the console",
                "By using a native HTML form"
            ],
            "correctAnswer": 0
        },
        {
            "id": 55,
            "question": "What does the term 'single-page application' mean in the context of React?",
            "options": [
                "An application with only one HTML page",
                "An application that loads a single HTML page but updates content dynamically without reloading",
                "An application that uses only one JavaScript file",
                "An application that does not use any CSS"
            ],
            "correctAnswer": 1
        },
        {
            "id": 56,
            "question": "What is the purpose of PropTypes in React?",
            "options": [
                "To validate component props",
                "To manage state",
                "To style components",
                "To fetch data"
            ],
            "correctAnswer": 0
        },
        {
            "id": 57,
            "question": "Which of the following is an advantage of using React?",
            "options": [
                "Increased rendering speed with the virtual DOM",
                "Bi-directional data flow",
                "Supports multiple rendering engines",
                "Automatic testing capabilities"
            ],
            "correctAnswer": 0
        },
        {
            "id": 58,
            "question": "What is the use of the 'ref' attribute in React?",
            "options": [
                "To directly access a DOM element or React component",
                "To manage state",
                "To style a component",
                "To pass data to children"
            ],
            "correctAnswer": 0
        },
        {
            "id": 59,
            "question": "How do you bind a method in a class component in React?",
            "options": [
                "By using .bind(this)",
                "By calling the function directly",
                "By using .map()",
                "By importing a library"
            ],
            "correctAnswer": 0
        },
        {
            "id": 60,
            "question": "What is the purpose of the 'children' prop in React?",
            "options": [
                "To display nested components or elements",
                "To manage state in components",
                "To fetch data from the server",
                "To optimize component performance"
            ],
            "correctAnswer": 0
        }
    ]
}
